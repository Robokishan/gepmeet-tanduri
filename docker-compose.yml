version: '3'
services:
  gepmeet-entry:
    container_name: gepmeet-entry
    image: robokishan/gepmeet:nginx
    ports:
      - 80:80
      - 443:443
    restart: always
    volumes:
      - ./nginx/conf/:/etc/nginx/conf.d/:ro
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro

  certbot:
    container_name: certbot
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.9-management
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    restart: 'always'

  redis:
    container_name: redis
    image: docker.io/bitnami/redis:6.2
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - '6379:6379'
    volumes:
      - 'redis_data:/bitnami/redis/data'
    restart: 'always'

  tanduri:
    container_name: tanduri
    image: robokishan/gepmeet:tanduri
    ports:
      - '8080:8080'
    environment:
      - PORT=8080
      - JWT_SECRET=string
      - MONGODB_URL=mongodb+srv://quadx:Jaiganesha143k@tanduriocean.dkglu.mongodb.net/myFirstDatabase?retryWrites=true&w=majority
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - RABITMQ_URL=amqp://admin:admin@rabbitmq
    restart: 'always'
    depends_on:
      - redis
      - rabbitmq
      - gepmeet-entry
      - panchayat

  panchayat:
    container_name: panchayat
    image: robokishan/gepmeet:panchayat
    ports:
      - '2000-2020:2000-2020'
    environment:
      - WEBRTC_MIN_PORT=2000
      - WEBRTC_MAX_PORT=2020
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - WORKER_ID=CHAY
      - RABITMQ_URL=amqp://admin:admin@rabbitmq
      - WEBRTC_A_IP=65.20.75.214
    restart: 'always'
    depends_on:
      - redis
      - rabbitmq
      - gepmeet-entry

  hunger:
    container_name: hunger
    image: robokishan/gepmeet:hunger
    ports:
      - '3000:80'
    restart: always

  portainer:
    container_name: portainer
    image: 'portainer/portainer-ce:latest'
    logging:
      options: { max-size: 5m }
    ports:
      - '9000:9000'
      - '8000:8000'
      - '9443:9443'
    restart: always
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
      - 'portainer_data:/data'

  watchtower:
    container_name: watchtower
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - REPO_USER=robokishan
      - REPO_PASS=dbbe1358-b67e-44e3-b5b9-a227cfa4307d
    command: hunger panchayat tanduri certbot gepmeet-entry --interval 5 --cleanup --include-restarting

  # mongo1:
  #   hostname: mongo1
  #   container_name: mongo1
  #   image: mongo:4.4-focal
  #   expose:
  #     - 27017
  #   ports:
  #     - 27011:27017
  #   restart: always
  #   entrypoint: ['/usr/bin/mongod', '--bind_ip_all', '--replSet', 'rs0']
  #   healthcheck:
  #     test: test $$(echo "rs.initiate().ok || rs.slaveOk().ok || rs.status().ok" | mongo --quiet) -eq 1
  #     interval: 10s
  #     timeout: 10s
  #     retries: 5
  #     start_period: 40s
  #   # volumes:
  #   #   - 'mongodb_data:/bitnami/mongodb'

  # mongo2:
  #   hostname: mongo2
  #   container_name: mongo2
  #   image: mongo:4.4-focal
  #   expose:
  #     - 27017
  #   ports:
  #     - 27012:27017
  #   restart: always
  #   entrypoint: ['/usr/bin/mongod', '--bind_ip_all', '--replSet', 'rs0']

  # mongo3:
  #   hostname: mongo3
  #   container_name: mongo3
  #   image: mongo:4.4-focal
  #   expose:
  #     - 27017
  #   ports:
  #     - 27013:27017
  #   restart: always
  #   entrypoint: ['/usr/bin/mongod', '--bind_ip_all', '--replSet', 'rs0']

volumes:
  # mongodb_data:
  portainer_data:
  redis_data:
    driver: local
